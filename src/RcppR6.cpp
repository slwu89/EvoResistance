// Generated by RcppR6 (0.2.4): do not edit by hand
#include <EvoResistanceNHEJ.h>

// [[Rcpp::export]]
parameters parameters__ctor(double x0, double c, double delta, double mu, double sdo, double sdr, double sro, double sdd, double srr, double Ne, double N, double sigma) {
  return parameters(x0, c, delta, mu, sdo, sdr, sro, sdd, srr, Ne, N, sigma);
}
// [[Rcpp::export]]
double parameters__x0__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->x0;
}
// [[Rcpp::export]]
void parameters__x0__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->x0 = value;
}

// [[Rcpp::export]]
double parameters__c__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->c;
}
// [[Rcpp::export]]
void parameters__c__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->c = value;
}

// [[Rcpp::export]]
double parameters__delta__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->delta;
}
// [[Rcpp::export]]
void parameters__delta__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->delta = value;
}

// [[Rcpp::export]]
double parameters__mu__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->mu;
}
// [[Rcpp::export]]
void parameters__mu__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->mu = value;
}

// [[Rcpp::export]]
double parameters__sdo__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->sdo;
}
// [[Rcpp::export]]
void parameters__sdo__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->sdo = value;
}

// [[Rcpp::export]]
double parameters__sdr__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->sdr;
}
// [[Rcpp::export]]
void parameters__sdr__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->sdr = value;
}

// [[Rcpp::export]]
double parameters__sro__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->sro;
}
// [[Rcpp::export]]
void parameters__sro__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->sro = value;
}

// [[Rcpp::export]]
double parameters__sdd__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->sdd;
}
// [[Rcpp::export]]
void parameters__sdd__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->sdd = value;
}

// [[Rcpp::export]]
double parameters__srr__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->srr;
}
// [[Rcpp::export]]
void parameters__srr__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->srr = value;
}

// [[Rcpp::export]]
double parameters__Ne__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->Ne;
}
// [[Rcpp::export]]
void parameters__Ne__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->Ne = value;
}

// [[Rcpp::export]]
double parameters__N__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->N;
}
// [[Rcpp::export]]
void parameters__N__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->N = value;
}

// [[Rcpp::export]]
double parameters__sigma__get(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_) {
  return obj_->sigma;
}
// [[Rcpp::export]]
void parameters__sigma__set(EvoResistanceNHEJ::RcppR6::RcppR6<parameters> obj_, double value) {
  obj_->sigma = value;
}


// [[Rcpp::export]]
trajectory trajectory__ctor(parameters& P) {
  return trajectory(P);
}
// [[Rcpp::export]]
double trajectory__x(EvoResistanceNHEJ::RcppR6::RcppR6<trajectory> obj_, int t) {
  return obj_->x(t);
}
// [[Rcpp::export]]
int trajectory__t_fix__get(EvoResistanceNHEJ::RcppR6::RcppR6<trajectory> obj_) {
  return obj_->t_fix;
}
// [[Rcpp::export]]
void trajectory__t_fix__set(EvoResistanceNHEJ::RcppR6::RcppR6<trajectory> obj_, int value) {
  obj_->t_fix = value;
}


// [[Rcpp::export]]
fixation_probability fixation_probability__ctor(parameters& P, trajectory& T) {
  return fixation_probability(P, T);
}
// [[Rcpp::export]]
double fixation_probability__pi(EvoResistanceNHEJ::RcppR6::RcppR6<fixation_probability> obj_, int t) {
  return obj_->pi(t);
}


